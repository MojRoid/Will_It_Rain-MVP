enum BuildType {
    RELEASE, DEBUG
}

class Config {
    Properties commonProperties
    Properties keysProperties
    Properties keystoreProperties

    String APP_NAME = "Will It Rain?"

    def getAppName(String buildType) {
        switch (buildType) {
            case BuildType.RELEASE.name():
                return APP_NAME
            case BuildType.DEBUG.name():
                return APP_NAME + " - " + BuildType.DEBUG.name()
        }
    }
}

ext {
    config = new Config()
    def basePath = rootDir.absolutePath + "/config/"

    config.commonProperties = new Properties()
    def commonPropertiesFileName = "common.properties"
    config.commonProperties.load(new FileInputStream(rootProject.file((basePath + commonPropertiesFileName))))

    config.keysProperties = new Properties()
    def keysPropertiesFileName = "keys.properties"
    if (file(rootProject.file((basePath + keysPropertiesFileName))).exists()) {
        config.keysProperties.load(new FileInputStream(rootProject.file((basePath + keysPropertiesFileName))))
    }

    config.keystoreProperties = new Properties()
    def keystorePropertiesFileName = "keystore.properties"
    if (file(rootProject.file((basePath + keystorePropertiesFileName))).exists()) {
        config.keystoreProperties.load(new FileInputStream(rootProject.file((basePath + keystorePropertiesFileName))))
    }
}